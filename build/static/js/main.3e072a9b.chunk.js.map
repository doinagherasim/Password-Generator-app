{"version":3,"sources":["passwordGenerator/passwordGenerator.module.css","passwordGenerator/passwordGenerator.js","App.js","index.js"],"names":["module","exports","PasswordGenerator","useState","password","setPassword","id","option","optionDetail","check","passOptions","setPassOptions","sliderValue","setSliderValue","color","setColor","passType","setPassType","showAlert","setShowAlert","copy","setCopy","className","classes","container","alert","alertText","onClick","btn_ok","title","password_container","header","btn","navigator","clipboard","writeText","window","location","reload","slider_wrap","slider_label","style","slider","max","min","type","step","value","onChange","event","passLength","target","map","item","index","pass_settings","pass_option","toogle_wrap","input_toogle","newPassword","showPassword","on","on_off","white","green","off","pass_btn","e","forEach","preventDefault","length","passwordResult","characters","i","charAt","Math","floor","random","passwordGenerator","every","passStrength","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e072a9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"passwordGenerator_container__psxKR\",\"password_container\":\"passwordGenerator_password_container__3yXav\",\"header\":\"passwordGenerator_header__3ZUAd\",\"title\":\"passwordGenerator_title__1K6K6\",\"password\":\"passwordGenerator_password__2bw7A\",\"btn\":\"passwordGenerator_btn__1LjDt\",\"slider_wrap\":\"passwordGenerator_slider_wrap__11qXF\",\"slider_label\":\"passwordGenerator_slider_label__3vzqo\",\"pass_settings\":\"passwordGenerator_pass_settings__2DwBc\",\"pass_option\":\"passwordGenerator_pass_option__a2mLY\",\"pass_btn\":\"passwordGenerator_pass_btn__Ychxj\",\"passStrength\":\"passwordGenerator_passStrength__2j9MK\",\"alert\":\"passwordGenerator_alert__Ew8xc\",\"alertText\":\"passwordGenerator_alertText__2GPum\",\"btn_ok\":\"passwordGenerator_btn_ok__2Zbjq\",\"slider\":\"passwordGenerator_slider__17G6D\",\"input_toogle\":\"passwordGenerator_input_toogle__3I0dJ\",\"toogle_wrap\":\"passwordGenerator_toogle_wrap__3oHJk\",\"on_off\":\"passwordGenerator_on_off__3LHJr\",\"on\":\"passwordGenerator_on__3kAJv\",\"off\":\"passwordGenerator_off__3-oBw\",\"green\":\"passwordGenerator_green__3zQRn\",\"white\":\"passwordGenerator_white__2G_zD\"};","import classes from \"./passwordGenerator.module.css\";\nimport {React, useState} from \"react\";\n\n// review- copy and refresh not working on the phone\n\nfunction PasswordGenerator () {\n    // 1. list of password options \n    const defaultOptions = [\n        { id: 1, option: \"Uppercase (A-Z)\", optionDetail: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", check: false },\n        { id: 2, option: \"Lowercase (a-z)\", optionDetail: \"abcdefghijklmnopqrstuvwxyz\", check: false},\n        { id: 3, option: \"Numbers (0-9)\", optionDetail: \"0123456789\", check: false },\n        { id: 4, option: \"Symbols (!@%&+)\", optionDetail: \"!@#$%^&*()_+\", check: false }\n    ];\n\n    const [password, setPassword] = useState(\"\");\n    const [passOptions, setPassOptions] = useState(defaultOptions);\n\n    // 2. Slider values onChange & strong-weak password\n    const[sliderValue, setSliderValue] = useState(6);\n    const [color, setColor] = useState(\"\");\n    const [passType, setPassType] = useState(\"\");\n\n    const changeSliderValue = (event) => {\n       let passLength = event.target.value;\n       // 3. strong-weak password\n       setSliderValue(passLength);\n       if(passLength <= 6){\n        setColor(\"#ffeb3b\");\n        setPassType(\"Attention! This password is weak! Advice: choose more than 6 characters length!\");\n       } else if (passLength <= 12){\n        setColor(\"orange\");\n        setPassType(\"This password is medium!\");\n       } else {\n        setColor(\"#61f161\");\n        setPassType(\"This password is strong!\");\n       }\n    };\n        \n    // 4. password generator function\n    const passwordGenerator = (length) => {\n    let passwordResult = \"\";\n    let characters = \"\";\n\n    passOptions.forEach(function(option) {\n        if (option.check === true) {\n          characters = characters + option.optionDetail;\n        }\n      });    \n\n    for (let i=0; i < length; i++){\n        passwordResult = passwordResult + characters.charAt(Math.floor(Math.random()* characters.length));\n    }\n    return passwordResult;\n    };\n\n// 5. option on-off for the toogle\n   const showPassword = (index) => {\n    const newPassword = [...passOptions];\n    \n    if(passOptions[index].check === true) {\n     newPassword[index].check = false;\n    } else if (passOptions[index].check === false){\n     newPassword[index].check = true;\n    }\n\n    setPassOptions(newPassword);\n    };\n\n  // 6. generate the password and set alert\n  const [showAlert, setShowAlert]=useState(false);\n\n  const submitPassword = (e) => { \n    passOptions.forEach(function(option) {    \n        if (option.check === true) {\n            e.preventDefault();\n            setPassword(passwordGenerator(sliderValue));\n            setShowAlert(false);\n        } else if (passOptions.every(option => option.check === false)) {\n              setShowAlert(true);\n            } \n      });    \n  };\n\n  const alertOff = () => {\n    setShowAlert(false);\n  };\n\n  // 7. Copy button\n  const [copy, setCopy] = useState(\"Copy\");\n  const handleCopy = () =>  {\n    navigator.clipboard.writeText(password);\n    setCopy(\"Copied!\");\n  };\n\n  // 8. Refresh button\n  const handleRefresh = () => {\n    window.location.reload();\n  }; \n\n    return (\n        <div className={classes.container}>\n\n            {showAlert && <div className={classes.alert}>\n                <p className={classes.alertText}>Please choose one or more options for your password!</p>\n                <button onClick={alertOff} className={classes.btn_ok}>Ok</button>\n                </div>}\n\n            <h2 className={classes.title}>Password generator</h2>\n\n            <div className={classes.password_container}>\n\n                <div className={classes.header}>\n                    <p className={classes.password}>{password}</p>\n                    <button className={classes.btn} onClick={handleCopy}>{copy}</button>\n                    <button className={classes.btn} onClick={handleRefresh}>Refresh</button>\n                </div>\n\n                <div className={classes.slider_wrap}>\n                    <label className={classes.slider_label} style={{color:color}}>Length ({sliderValue})</label>\n                    <input className={classes.slider} max=\"15\" min=\"6\" type=\"range\" step=\"1\" value={sliderValue} onChange={changeSliderValue}></input>   \n                    { passOptions.map((item, index) => \n                       <div className={classes.pass_settings} key={item.id}> \n                       <p className={classes.pass_option}>{item.option}</p>  \n                       <div className={classes.toogle_wrap}>\n                           <input className={classes.input_toogle} type=\"checkbox\" onChange={() => showPassword(index)}/>\n                           <div className={`${classes.on} ${classes.on_off} ${passOptions[index].check ? classes.white : classes.green}`}>ON</div>\n                           <div className={`${classes.off} ${classes.on_off} ${passOptions[index].check ? classes.green : classes.white}`}>OFF</div>\n                       </div>\n                   </div>  \n                    )\n                    }\n                    <button className={classes.pass_btn} type=\"submit\" onClick={submitPassword}>GENERATE PASSWORD</button>\n                    <p className={classes.passStrength} style={{color: color}}>{passType}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PasswordGenerator;","import PasswordGenerator from \"./passwordGenerator/passwordGenerator\";\n\nfunction App() {\n  return (\n    <div>\n      <PasswordGenerator/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}